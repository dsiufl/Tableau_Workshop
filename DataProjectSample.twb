<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.1017.1259                               -->
<workbook original-version='18.1' source-build='2019.3.1 (20193.19.1017.1259)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SavingAnalyticObjects />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='hate_crimes' inline='true' name='federated.0q63c0k1vj0l191g3va850lssk6o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='hate_crimes' name='textscan.1ke97hw1cgyc4p13sphlf0u8stqh'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/coope/Documents/Programming/WorkShops/Tableau_Workshop/hate_crimes.csv' dataRefreshTime='' directory='C:/Users/coope/Documents/Programming/WorkShops/Tableau_Workshop' filename='C:/Users/coope/AppData/Local/Temp/TableauTemp/02xp48y096xd3116y1q7y1i933hp/hate_crimes.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ke97hw1cgyc4p13sphlf0u8stqh' name='hate_crimes.csv' table='[hate_crimes#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L52:no:A1:L52:1' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='integer' name='median_household_income' ordinal='1' />
            <column datatype='real' name='share_unemployed_seasonal' ordinal='2' />
            <column datatype='real' name='share_population_in_metro_areas' ordinal='3' />
            <column datatype='real' name='share_population_with_high_school_degree' ordinal='4' />
            <column datatype='real' name='share_non_citizen' ordinal='5' />
            <column datatype='real' name='share_white_poverty' ordinal='6' />
            <column datatype='real' name='gini_index' ordinal='7' />
            <column datatype='real' name='share_non_white' ordinal='8' />
            <column datatype='real' name='share_voters_voted_trump' ordinal='9' />
            <column datatype='real' name='hate_crimes_per_100k_splc' ordinal='10' />
            <column datatype='real' name='avg_hatecrimes_per_100k_fbi' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_household_income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[median_household_income]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>median_household_income</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_unemployed_seasonal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_unemployed_seasonal]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_unemployed_seasonal</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_population_in_metro_areas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_population_in_metro_areas]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_population_in_metro_areas</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_population_with_high_school_degree</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_population_with_high_school_degree]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_population_with_high_school_degree</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_non_citizen</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_non_citizen]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_non_citizen</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_white_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_white_poverty]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_white_poverty</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gini_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gini_index]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>gini_index</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_non_white</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_non_white]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_non_white</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_voters_voted_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_voters_voted_trump]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>share_voters_voted_trump</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hate_crimes_per_100k_splc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hate_crimes_per_100k_splc]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>hate_crimes_per_100k_splc</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_hatecrimes_per_100k_fbi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_hatecrimes_per_100k_fbi]</local-name>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias>avg_hatecrimes_per_100k_fbi</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hate_crimes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L52:no:A1:L52:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>553</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Avg Hatecrimes Per 100K Fbi (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[avg_hatecrimes_per_100k_fbi]' peg='0' size='0.84' />
      </column>
      <column datatype='integer' name='[Median Household Income (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[median_household_income]' peg='0' size='3204' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Share Non White (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[share_non_white]' peg='0' size='0.0695' />
      </column>
      <column caption='Avg Hatecrimes Per 100K Fbi' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
      <column caption='Gini Index' datatype='real' name='[gini_index]' role='measure' type='quantitative' />
      <column caption='Hate Crimes Per 100K Splc' datatype='real' name='[hate_crimes_per_100k_splc]' role='measure' type='quantitative' />
      <column caption='Median Household Income' datatype='integer' name='[median_household_income]' role='measure' type='quantitative' />
      <column caption='Share Non Citizen' datatype='real' name='[share_non_citizen]' role='measure' type='quantitative' />
      <column caption='Share Non White' datatype='real' name='[share_non_white]' role='measure' type='quantitative' />
      <column caption='Share Population In Metro Areas' datatype='real' name='[share_population_in_metro_areas]' role='measure' type='quantitative' />
      <column caption='Share Population With High School Degree' datatype='real' name='[share_population_with_high_school_degree]' role='measure' type='quantitative' />
      <column caption='Share Unemployed Seasonal' datatype='real' name='[share_unemployed_seasonal]' role='measure' type='quantitative' />
      <column caption='Share Voters Voted Trump' datatype='real' name='[share_voters_voted_trump]' role='measure' type='quantitative' />
      <column caption='Share White Poverty' datatype='real' name='[share_white_poverty]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[avg_hatecrimes_per_100k_fbi]' derivation='Sum' name='[sum:avg_hatecrimes_per_100k_fbi:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hate_crimes_per_100k_splc]' derivation='Sum' name='[sum:hate_crimes_per_100k_splc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_non_citizen]' derivation='Sum' name='[sum:share_non_citizen:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_unemployed_seasonal]' derivation='Sum' name='[sum:share_unemployed_seasonal:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.282776' measure-ordering='alphabetic' measure-percentage='0.717224' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:avg_hatecrimes_per_100k_fbi:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:share_unemployed_seasonal:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:share_non_citizen:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:hate_crimes_per_100k_splc:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{b8736d19-7c26-4353-83d7-60a809e721df}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:avg_hatecrimes_per_100k_fbi:qk]' />
            <field name='[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:share_unemployed_seasonal:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.0q63c0k1vj0l191g3va850lssk6o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0q63c0k1vj0l191g3va850lssk6o'>
            <column caption='Avg Hatecrimes Per 100K Fbi' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column caption='Hate Crimes Per 100K Splc' datatype='real' name='[hate_crimes_per_100k_splc]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_hatecrimes_per_100k_fbi]' derivation='Sum' name='[sum:avg_hatecrimes_per_100k_fbi:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hate_crimes_per_100k_splc]' derivation='Sum' name='[sum:hate_crimes_per_100k_splc:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0q63c0k1vj0l191g3va850lssk6o].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:avg_hatecrimes_per_100k_fbi:qk]</rows>
        <cols>[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:hate_crimes_per_100k_splc:qk]</cols>
      </table>
      <simple-id uuid='{9B8881D5-7E9D-43FF-B333-A5F77E11FEF6}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.0q63c0k1vj0l191g3va850lssk6o' />
          </datasources>
          <datasource-dependencies datasource='federated.0q63c0k1vj0l191g3va850lssk6o'>
            <column caption='Avg Hatecrimes Per 100K Fbi' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column caption='Gini Index' datatype='real' name='[gini_index]' role='measure' type='quantitative' />
            <column caption='Hate Crimes Per 100K Splc' datatype='real' name='[hate_crimes_per_100k_splc]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Share Voters Voted Trump' datatype='real' name='[share_voters_voted_trump]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_hatecrimes_per_100k_fbi]' derivation='Sum' name='[sum:avg_hatecrimes_per_100k_fbi:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gini_index]' derivation='Sum' name='[sum:gini_index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hate_crimes_per_100k_splc]' derivation='Sum' name='[sum:hate_crimes_per_100k_splc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_voters_voted_trump]' derivation='Sum' name='[sum:share_voters_voted_trump:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q63c0k1vj0l191g3va850lssk6o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:avg_hatecrimes_per_100k_fbi:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:gini_index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:hate_crimes_per_100k_splc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:share_voters_voted_trump:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0q63c0k1vj0l191g3va850lssk6o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q63c0k1vj0l191g3va850lssk6o].[:Measure Names]' value='117' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0q63c0k1vj0l191g3va850lssk6o].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q63c0k1vj0l191g3va850lssk6o].[none:state:nk]</rows>
        <cols>[federated.0q63c0k1vj0l191g3va850lssk6o].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{175CFFAC-8783-4DA5-9B28-98A2378AB19A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.0q63c0k1vj0l191g3va850lssk6o' />
          </datasources>
          <datasource-dependencies datasource='federated.0q63c0k1vj0l191g3va850lssk6o'>
            <column caption='Hate Crimes Per 100K Splc' datatype='real' name='[hate_crimes_per_100k_splc]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Share Population With High School Degree' datatype='real' name='[share_population_with_high_school_degree]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[hate_crimes_per_100k_splc]' derivation='Sum' name='[sum:hate_crimes_per_100k_splc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_population_with_high_school_degree]' derivation='Sum' name='[sum:share_population_with_high_school_degree:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0q63c0k1vj0l191g3va850lssk6o].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:hate_crimes_per_100k_splc:qk]</rows>
        <cols>[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:share_population_with_high_school_degree:qk]</cols>
      </table>
      <simple-id uuid='{8E2D2D18-B323-4EE3-83A2-B94342F686ED}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='hate_crimes' name='federated.0q63c0k1vj0l191g3va850lssk6o' />
          </datasources>
          <datasource-dependencies datasource='federated.0q63c0k1vj0l191g3va850lssk6o'>
            <column caption='Avg Hatecrimes Per 100K Fbi' datatype='real' name='[avg_hatecrimes_per_100k_fbi]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Share Unemployed Seasonal' datatype='real' name='[share_unemployed_seasonal]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_hatecrimes_per_100k_fbi]' derivation='Sum' name='[sum:avg_hatecrimes_per_100k_fbi:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share_unemployed_seasonal]' derivation='Sum' name='[sum:share_unemployed_seasonal:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0q63c0k1vj0l191g3va850lssk6o].[none:state:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:avg_hatecrimes_per_100k_fbi:qk]</rows>
        <cols>[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:share_unemployed_seasonal:qk]</cols>
      </table>
      <simple-id uuid='{B34B9832-CFF1-41FD-94EB-56AB39D3007E}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q63c0k1vj0l191g3va850lssk6o].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{751E20AE-7139-4FF1-8FD2-2263393BB7E9}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q63c0k1vj0l191g3va850lssk6o].[:Measure Names]</field>
            <field>[federated.0q63c0k1vj0l191g3va850lssk6o].[none:Median Household Income (bin):qk]</field>
            <field>[federated.0q63c0k1vj0l191g3va850lssk6o].[none:state:nk]</field>
            <field>[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:median_household_income:qk]</field>
            <field>[federated.0q63c0k1vj0l191g3va850lssk6o].[sum:share_voters_voted_trump:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9C7F1C60-4C0E-48E7-BD0E-35E91AF8E18F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q63c0k1vj0l191g3va850lssk6o].[none:Avg Hatecrimes Per 100K Fbi (bin):qk]</field>
            <field>[federated.0q63c0k1vj0l191g3va850lssk6o].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1048F5B5-F178-48BC-823F-98C25EB1EB01}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q63c0k1vj0l191g3va850lssk6o].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0q63c0k1vj0l191g3va850lssk6o].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB9F7B7D-B9FC-4573-ADF9-CA866F492F27}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      Dl4FTwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAaOklEQVR4nO2dWXMbV5qmn0QCBEkABPedokiKpCiR1GatLlu2LNvlrp7o6uluV9vl7pu+
      mZjrifkFczM3E9Exf2AiylVdbXf3VNRYVbZsWZZs2ZJsSRRXc9/BncS+JjLnghIlShAJkBBF
      Gt9zpUzkefMDlS8yz/m+PEcxDMNAEDIU04sOQBBeJGkzQDweT4uOpmmiIzo7pqOk8gjkmugn
      phRTW1OEd3kB1/wStfWNZKmg6zqKoqQc8JPouo7JtH1fio7oJIM5FfGKmkqGBvwATE5NY86y
      4POHKC20A6CqaipyCdE0DbM5pbBER3S2rJOS5aYnJphyufD6fOQ77eiGQjQaSTlIQdgtpGS5
      qn0tVNaAoig47HYqAdj+Y48gvChSMoCimEjDY74g7BpkGFTIaMQAQkaz/W63IOwwum7wr192
      E4vrnGiu4PD+0i1ryR1A2HNML3qpLHbwD2+1c29gdltaKRkg4PXyMN/rWV5gaHRiWycXhK1Q
      WexgasHLbz/vor2hbFtaKTwCafTf7aLptZexA6Ojo5RW12/r5IKwFVSTifcvtmEYYDJtb1gy
      BQOYqah49KzVdvQEIz29hEqLyNJ1dF0nHYWluq6npS5EdDJDR9e3p5O8AbQIi0E/oalZDKcN
      78oiWo6NbEVBeVACIaUQorPXdFI40krbsWNrmw6Hg6qUQhOE3YeMAgkZjRhAyGjEAEJGIwYQ
      MhoxgJDRiAGEjCYFAxiMDQwSfWx7eGj4OYQkCDtHCpkHnXggQhTIAmbGR3EHoxiGgf4gE5wO
      dF1PywwToiM6yZCCAVRyc61rWx6fD/fCEqFoIzlZqxngdLzVbxiG6IjOjumkVArhMeJEH5RC
      HGw9Qk1dgFzrI4l0TIsiOqKzkzoplUIcPHhw3S6bzZZ0c0HYjcgokJDRiAGEjEYMIGQ0YgAh
      oxEDCBmNGEDIaFIqhZgYGlorhZh3TdI/NIosLyPsZVIqhYh6Q2ulEDa7g+mZcTTDwCSlEKKz
      R3VSKoWw2bLXthTVTK5ZJxqHXHX1RrKXU+Kik5k6qZVC6NpaKUQ06MNaWEauqqzNGL2XU+Ki
      k5k6qZVCtLQ82nY4KEolKkHYhcgokJDRiAGEjEYMIGQ0YgAhoxEDCBmNGEDIaFIwQJyu23cI
      PdianR6ns7OX7efuBOHFkUIm2EShw7F2wZeUlrG4PIJhGMRlfQDR2aM6yRsgrjG/tEB0oRiT
      LZv+nk7yS6tRFGVtXQBZH0B09ppO8keaVJqPH8OkmjGrJg61HSWuG9KJEPY0yRtAMZGbm/uo
      YRrcKggvGvkBFzIaMYCQ0YgBhIxGDCBkNGIAIaMRAwgZTUqlEN3f310rhViadzE8PvVcghKE
      nSKlUoh8u22tFCK/qIylkeF1C2RIKYTo7DWdlEohlpaXiS+toOZmEw76WVxcpK6+CYuUQojO
      HtVJqRSi4UgbJtWMxWJGybXR3taOKr0IYQ+TUimE3W5/1FBKIYSfAPL7LWQ0YgAhoxEDCBmN
      GEDIaMQAQkaT0ADhxRGG5oL09nTvdDyCsCXc/jBRLfUpGhIawOosZ+TedVYCscf2anx/9RsC
      D7aG+3u529FFelYFEIStc6Nrguv3x/nt513EUjRBwsH8K5c/xR+BmNm37tDqyrK1FWEUczZV
      DggaBjlSCiE6L1BnxLXC3184zFcdY8yvBKgqSb4iIaEBXr9wgT998Q1226N3gNEiTM3P4rQ5
      qHDaUIwoM8E4RxQFRUohROcF6rx2bD+/v9pLgSObqpK8lHQUI8HPdnCun0u3p4h4XJw8e57m
      hn2bCsXjcTGA6Ow5nYRHBk35HKkLMu1xUF1Rsu2gBGG3ktAA/T/24fFHKMh3YMvN2emYBGHH
      SGiA8pIi9h+sQdUjOx2PIOwoCYdBPf4Qpfk5jI1P7nQ8grCjJM4DmDT++Z//N1n2gp2ORxB2
      lIQGCAZD1NTsI+j373Q8grCjJDTAktfPmTOn8C7P73Q8grCjJDRAcb6TgYFB8ovK1vYZWoh7
      dzsYHJ0AYKCvmx/u3pdSCGFPk3AUyO1xk5Wbj9u9srYv5p2nqK6V2Mo4sLokfczjlVII0dnT
      OgkNYDKZMAwDk+lRZtfiLGO5swdHQSE+n4/8fCcRw4JNSiFEZw/rJDyy9chLRDWdmflHfQBF
      zebosSNr2w6Hg7LKbUQqCLuAhH2Aa19eZmhoiMHhsR0ORxB2loR3gL9+9wPMZjOxWCzRx4Lw
      kyHhHcAILdM9NI3FYtnpeARhR0lsAFTufnuFT69+s9PxCELK+ENRPrzcyYeXOwmEU3tqSWyA
      mJ+QyUZloT3Rx4Kwq7jRNcFbJxt462QDN7omUmqbsA9gWHJxqDEWveG0BCgIz5P2hjI+uz0E
      wGtHa1Nqm9AAV69ew1FQzIVXzqzb7/d6sOY6sJhNRMMhQjEdp8O2xbAFIT1UFDn4u9cPA2BO
      caKfhIf7vCvMTY1y6Yvra/v0sJvR6SWGR4YBGBwcYGxwkO3n7gRh+2RnmcnOSj2RlrDFu7/+
      J2KaRij06IUYQ4uQk1eIHlhNjhmKiiMbonEwbz8BLAjbIq7rXLkziq7rvHmyAdWU3K0g4VGh
      uQEuXf6aP137dm2fai8lW1umrLIGn89HRWkR2PLJkYtf2AXc6JqktszJvjInN7qSf5Er4R0g
      u7iWSKif08fbH9urUF1b/2jT4aBoq9EKQpopzMthbNaNruvUlOUn3S6hAcJLE7hjJmZmXNTV
      16UtSEF4XhzeX0qO1YIej3OgujjpdonvACUNtFW5sBeWJfpYEHYdigINlQVomoaiJN8uoQEi
      KxNMLkeosLjTFZ8g7EoSdoJNJgUtKoVwwk+fhAbQDYV4PEZETCD8xElogP6hcWxZBlEphxZ+
      4iQ0QEtzEwXldbxy+vhjew2mxkdw+0MATI2P0NPzo2SChT1Nwk5wVFdRNR8d3X28evYkAHH/
      PBFLEcGZKfIbG6murSc0OIhqGOiGgWEY6Pr254gQHdFJFn8oypd3R6kpc3LsQPmWdBLeAXoG
      Rzh//jxW0+Orbayf8SEaWMGSm3zCQRDSzaXvBnntWB2T814WPUFGXCuMzqQ2cpnwDmBTDS5d
      ukR5bdPaPtVeRtbiCI7yKnw+H4ZuYl9lCYoCiqI8mEVi+2vu6bouOqKTFPZcKxNzHnyBCCMz
      btz+MLquE40btNaVJqWRcIEMgEgkgtlsTnqqE1kgQ3R2Wieu63QNz1NZ7ODHiUXKC+3E43EW
      PCFePZLcewEJLRdZmeD/fPyJrBIp7GpUk4mjjeWUFth4ua2G0Rk3Y7MeXm6rSVojoeVUqw2n
      RWd6wUNb2sIVhOeHajLx9qkGNE1LuhQannEH6L59DZO9hEhEFsgQ9gaBUBQtnvpoVMI7QNOx
      n2GMzpJjz9t2YIKwFUKRGP0TSzTvKyLHuvH0PLf7ppmc9+APxfjV6y2oqsEn3w7gDkR4tX0f
      teXPHq1MfK8ILvJd5wAT46Pb+hKCsFU+/qoXs9nEx1/1bnrswOQS//nVFmpK8/j4qz4+utpD
      bnYWv36zja87N54lInEfIK+CN0+rzHlCW4teELaJYRgcqCrkTr/rqf2ffDeA2x/h1SP7qC3L
      51xrDR9e7mRoeoW/O38Qk6ry8Ve9+IIRGqo2XuUo4R2g4949vrv1HRiPPVMZcfp7e3DNLQGw
      NOdiYGR8m19TEBLz6pFaPvl24KnhTNeSn1zrg1/3+6u/7vWVBfzD20f4m/MtuJb8TC96ceRk
      YWBwqqV6w/Mknh5dWZ0eXXmsNx3zuMguO0DIMwUUMTY2jtVegKYbKIasDyA66dWpKXFQU+IA
      WLe/0G5lYs7NH7/pZ3953rrPDtUWoSoGt/pcvPnS6puMN7rGOXf42SZI3Ak+1E5DSzuK+uhj
      NduOb9yFWdGJRqPk2OxYFY2QruAwy/oAorMzOmYzfPBWO8FIDKct+6nPm/cVEzcU5t0BDKA0
      37ah7jMzwYnweVaw2pzoWhSzquALRilwrrpUMsGis1t0VNXMwNTqo3pTddGGr0imdEaH80GH
      wrzqvAKndWtRCsJzRFGguSa5OUu2X8UkCHsYMYCQ0YgBhIxGDCBkNGIAIaMRAwgZTfIGMOIM
      9PUwM786vjo1NkK/LKMq7EIm5jxMzHlIJsOVdB4g5nFhLT1A0D0FpUWEIyE0PWt1RghdSiFE
      Z3fo9I4tMDbrAQy8gTAH922cD0jaAGq2Hf/ELKqhE4vFKCgqZW7SRVRRyFalFEJ0dofOkjfM
      4bpSDGB6wbupZtJnNGUXUF1ikONwosWi5OZkU1Ffz9PVGILw4jjXWs2Vu2MAvHWyYdPjU6oF
      2gipBRKd3aQTja3OaZVl2fia3P4ZBWEHSPaCBphb9vPZ96uLOb59soGyDda7FgMIu565ZT+f
      3X5wQZ/a+IIGuDc4yzunDwBwp3+Gnz/4dyLEAMKu597gLO+cSe6CBjjXVsMfvv4RgL9+5eCG
      x0ofQHR2vY43GFm7oH/5ykHycp9dhp9qPGIA0cloHSmFEPYs4ahGfJtTsydtACMe4X7HfUbG
      pwCIRwJ8c/OHbZ1cELbKnX4Xf7zRz+8+70KL68R1nXA09UxyCqUQsxTUHia2sjoVysDgCLac
      LLS4joIhpRCis6M6vWMLvPfGYa51jDMx5+abzgkm573Uljv5q5ebybEmd2kn3QcwtCD3Ogew
      5xdQUVJIKOBjdHySo8dfwmpRpQ8gOjuqMzi1xM2eKXKyLZxuqeJ23zSgML/ipzAvh19daE1K
      J+kzKuZcjh8/urbtcDgoLa9MOmBBSBdxXaem1Elj9Wqhm24YhDrG6RqZ5+XWalLpFUgeQNhT
      aHGdf/miiyyLmQPVhZxoqsCkKHzwVjvTC17GZ92cOrTxbHCPI6NAwp5idtlPdWke775+iL6x
      hXWfVZXkcaqlErO6zfUBBGG3UlnsYMkT4sPLnZxqqQIgpsWJafFNWiZGHoGEXUk0FmfYtUxD
      ZeG6AjiTovC3rx1a255fCfDnW0OAwTunGyl0pDZZmxhA2FXcGXDRN7bIgjvIq0f28dHVHj54
      q/2Zx98dmOEvHqsTunhiP3++OciSN8Trx/ZTVbLxIi/yCCTsKnpHF/jgrXZml320N5QR1zce
      pT/XWsOfbw7xp5tDnGutYWbJj8Wi8v7FNq7eG9v0fHIHEHYV2VYzn90e5kBVIf9xvY9zrRuP
      6OTZrPzjz4+sbZtVmLzj4U83B6ktd256vuQTYfEInV0/4igspn5fFbPT47hm3bSfOIIZKYYT
      nfTo6IbBojtIcX4upo2mdd5ARzcUfKEIRXm5mx6/5VIIu91BKDqHYhjEZVYI0UmjTqHDih6P
      b5rQCkc1vuoYp7bMSUtt8ZqOyWTCmZuVVFxJG8CSV8JCZzcOZz4+nw+v202OqhDWFWwyK4To
      vACdS9f7eeNEHdc6xqgqcVKYl5OyTkqlECeeKIWoqq1PKWBBSBXDMIjG4mRZVJQnHomyLCpu
      f5hwNJ5S8utxZBRI2BXENJ3+iUWiTyS0/nxriD/e6H8w1r+e/3SuifmVAK8eqSXPtrXFWsQA
      wq7g36714Q1G+OjLnnX7l70h/ub8IRY9wafamFUT51prqCnd+oLuYgBhVxDXdY4eqHhq3L+y
      2MH/+M11vIEI9wZn0n5eMYCwKzh9qIp/v9bL2SeWNG2qLuLl1hr+y1+9RM/owjNar6LrBjEt
      tVckJREm7AoaqwppqS19an+WReXzH0b47PYwv9xgipN4XOdfrnRjUqBlfwnHGiuSOq/cAYQX
      imEYfHpriN990Y1r0ffEZ/BN1wT/9Itj/Pf3X8YbiDxTZ2bJT3XJapn0ZneKx0nJALFYFP3B
      M5oejxONxlJpLghPMbPkx6yaeO+Nw3x5d3Rtv2FA58gci+4gv/msk99f6X7q8ehxKksczLsD
      /PaLbk4eTP5NxaQfgYyoj67eCXJt2RxsbGBhfoapyTnaTp0gK+nTCcJ6ipw5TMx7+Oz7GDWl
      j2p3BqeW+OTbAZw2K+eP1qIoCracLALhKJ98O4ABXDxRjy8YYX95PiZF4d3XDz+/ibFiKxPM
      UEFsZYKG+gbcS3MseCMc2F+D/qAU4slExVZ4mMoWnczRiWpxPL4QJQWP5vz8qmOcfWV5XOuY
      IBKL88ufNfHFnTFcSz5+fqqB7pE5hmc8XDi2n2A4xpsv1W0pnuRLIfIr8XX34Sgsxefz4Zp2
      oVrziCsKZimFEJ1tYDabyTKr63ReO1bHpe8GKC2w8YuzTXz+wwh/+SDx9T9/d4NjjeUse4I0
      7yvmyp3RtbYyNaLo/CR1PP4wf/jmRwxWs8anWqr49NYQlcUOfnGmkcK8nC3FIwYQnT2no8V1
      vuuZpLYsn31l62v+H+rEtDiqatq0pFryAMKuxjAMtLiOWTWt9THNqolX2muf2aZjaJbesQV0
      3eC9i62oG/QJJA8g7Go+vT3Mf1zv49PbwxiGQUyLb/jeSSAU45vOCd57o5XqkjxmFv0b6osB
      hF2HPxRlfNaNYRgseYL86kIrS57gOjM85HFThCIxPr7WS3NNEf/ro5vMrQSoLHFseC55BBJ2
      FaFIjI+u9tBQWUD/5BJVJQ4+vNxJVYmD6QUfH7zVzoeXO9eO/+z2MJ5AGKctm2ON5VQU2jl/
      dD/z7iC/unB40/OJAYRdhTcQISfLjCcQwe0P849vP3rh/erd0VUzFD/6VV/0BNdMUVZox5aT
      xb9f79t0GaWHpGQATdMwqSomRcEwDAzDSEsyRRAeUlZoZ2TGTVWJg1hs/csxrx+ve+r4yuLV
      O0TlA1P8rK3m+bwSaUR93O8Zw2a3cbCxnsU5FzPLPtoPbbwImSCkSmWxg7dPNqw960diGn/4
      uh+AX77SjNXy6LK9kMAUqbDlUgiAgcEBGg80SimE6KRVxxOIcHdwluON5ThtVq7cHeXw/tVS
      6Z6xed54cNHHdQOTSUF5hk4ypFAKUbGuFCLgWWZ5aZlonYLVLKUQopM+nSKnmQvH6lYvbkWh
      qaaEr7smAYOzh1Yfce4PzdI9uoCBwXtvPBrrf26zQqBYONz2aI5Gh8NBefWzkxGCkCyGYfDF
      nVEWPSEuvlTP3LJ/3cVdV5FP0YNSh4cvv3eNzPPrN9u4dn8c16J/y+8FSw9WeOHMLvsBg/cv
      tvHFDyN0jczz/sXVRNbDl2TybNZ1Mz+caK7gN5c7mV3yrxsVShWpBRKdF64Tjmp8ePk+1SVO
      srPMlBbY+KHfRZZZ5d3XD2MyJd+3lGI40dmTOoFQhEBYo7TAtqPxpBR5PB7HZFotSjJ0HR02
      LDQShGSxWlRsOVub3Go7JL9QdtRHx/0e+odW39sc/LGHjo4utrYwjSDsDpI2gBZYpqSuBYu6
      +sRkttqodjoIP7fQBOH5k7QBLM5KvJN9mK02fD4fFlVnPhJj8xnYBWH3su1O8MPm6coIpqsz
      LTqikwxpqQZ9WAqRDgzDSIuW6IhOMmzbAIqioKqrc7en4w4gOqKzkzppywMIwl4kbYP4Ye8S
      nd3dzC15AYOBvi4GhseSajs3PUHn/U7CcQO0CDdu/ZCGGGBsqJ+evsHt6wwP0J0GnYB7gfs9
      qetgxNfp9HZ2MD41u+14Rgd/ZMI1t00djeH+fr6/27lpu6cw4vR03mdkYhpY/f+639FFLNWf
      5Cd1hgfo6OxhkxVWgTQaYHrRQ1trK37PIhDDnOXEnGSWwB/RaDtQxvRCAMxWigs3X95y8xig
      uLgYc1bqEzc+qWO35RIOP3ti1qR0DJ2pOTfZqkHKt9zAwrp4VIuK37/xy96bxoOGyzWPx+3e
      po6ZuvpqCgqLUtYhsEB22QEMbfVvG46ECYXDpFxU/4ROKBhEcy/iTmLtvrQZoMieTVd3N+Zs
      Oz5fGL93Hn84uclzzYZGV/8k+bng8/mYmpxkajb5GX4Tx+Dlzt17WMypjyys1/Hg8frR9dRX
      Qlyn41nBZIKZ2fnUDZCTvy4es8lCJJx6Bmb99wphd2RvaYXH9To+xsZc7K+tSlmHnHzck/1E
      NAOfz0c8rpOtxgmmOufyEzpFxcWYHAU4LZs3lT6AkNFIIY+Q0YgBhIxGDCBkNDIv0BPcvX0D
      zcjBrEdpPHMa+zOOUxSF777+EnSDksbjNFTkJzzu1s2bnD5zBgC3a5RYXg2Lk4O0tLQ8qcit
      m9/SVFXE/XmNXN2P3ebAYlFprC1mNlpIuR0CswOMRkrwzwzgdOat6cwO3CVS3EptYRbumWHu
      DS/S3NxEZUkBy+PdLFj301z+9Le5efMWZ8+e4cpn/w/VnEP72fMU5CR3WaRjEoQXjRjgCeJa
      jJBhweSe5+71S6iOAwzd+ZyqhoP0do9RVWZnbGycX//X/8by8jKFThu933/NkKOAHMXH8ESQ
      wmIHlgdDwAoGk4NdfPj7S5w91UgwLwzuUabHhvAFNPQshVJzhOLjf4lDD3BtyES5XcHr9bO4
      uMiia4KcN37GjxPd9FhKeKkixJ17E8S881SV5ONbmsG3Mo8nasVa7GdAd3CqxUnA60WJ+fi3
      //stTaUqQ6Flhn/wEowp2OzZaP4VNNWG9cEVEI6beOdcE7/9+F+ZX17iUEszvjBYVAPv7Ag1
      1fvoGBhmf2UVo1Mujpx+nYvn2jf4S+4N5BHoCfLzC1meHGA5bKa5uZ7pwS7y9rWhh7w0Hj5O
      WZGTly9cJC/LBJYczr72DidbajDQAYVYNIrZbCHgXWLRvTpW3zcwwqH6aoqq9qPoj3IjhmGA
      mkVTXQ2hsEZzWzPDfSOY/C6s+asTDtTU1KAbcKC5mWgoBEDjwTYqSwoA0KIxDF3HAOoPNqOF
      QhjmHMqKHXR39wEGiqKw/0AzenS1/cNhv8czEkHPIte/7aSpqZa6g0c4VF9BXFeIaxrFlXU0
      1VXQeOgETXVl1B08wuHGmuf6/7BTyDBoOokuc7N7gTPHm3fslAszk/R099L+8kUKc7dfTblG
      LMj397tRrU6Ot+3c99lpxABCRvP/AWAAhVmcp3V1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAfgklEQVR4nO2dd3dcx5mnn7qdAxqhGwRAEIEkAjMpUaQsS5QsK3rGY43GM3t2LM/8sZ9h
      P4D9FfYj7MqetVcOGmlky5QVKIqKpCgh5wwQqdE53L5h/wABEwJAdje60Q12Pefw6JB6b/UP
      t+8PdavqrbeEaZomEkkFIoQQSqlFSCSlZM8G0HWdXDoRTdOKElsuOgzDwDCMkuvIVbOu6yXX
      YZrmvuuQPYCkopEGkFQ00gCSikYaQFLRSANIKhppAElFk70BTJOJiQlM02RlYZpwMvspKImk
      XLFmG2hoKpF4HNMEJRMjGM/gc1owTTOnee9c5pxzjTVNEyFESXVsrEVkuyZRzPuRi+Zc1lCK
      pWMjfoOhmVW+GJijyu3glSe7+e5XWwgdWRtAsTnwOO0AeKu8RO62JYTY/JMNpmmiKNl1PPnE
      llrHxhdYzJ+xGLHlokMIsRl/a/gO//7Sed6/NclSKE6Tv6rgOrI2QCYVJ6NqLCwvkw7H0awm
      +NsAcjLARnyhY3M1YjF1FKvtYsVu/PYvtY6N2I34zhY/b3w0gJrR+cEj7Tu2s1cdYq/JcLqu
      5/SbV9M0rNbsfJdLbLnoyLUHKJaOXDWbponFYimpjo3X6Q0dpmmSUjXsNguWHe7nXnUIIUTW
      PYBEst8IIXA5bEX9DDkNKqlopAEkFY00gKSikQaQVDTSAJKKRhpAUtFIA0gqGmkASUUjDSCp
      aHIyQCaTwTRN1HQSVcs+w08iKVeyNoCRSfHpF19imjpDgyMMD48iK2pJDjo5pEM7OdwQAFTc
      3noEic0aOLnmkmdbzyXX2HLQsaEh2z0SxbwfuWrOZQ9DMXRsxO+njpzSoYPBNVzeWkwtiHBW
      r2c85piHL7NB90fHQc0GFULsq46sDWBzerh8+fH1vzTWZ3uZRFLWyFkgSUUjDSCpaKQBJBWN
      NICkopEGkFQ00gCSikYaQFLRSANIKhppAElFIw0gqWikASQVTe4G0JPcunmb2z0DMh1acuDJ
      vTSisGCzKkTjcZkOvQMyHTr/2I34skyH3kSxU+Vx4K6pk+nQOyDTofOPLet06Htp7+jO5zKJ
      pOyQg2BJRSMNIKlopAEkFY00gKSikQaQVDTSAJKKRhpAUtFIA0gqGmkASUUjDSCpaKQBJBVN
      HgYwGOrvZWRiWqZDSw48eSTDmcTjCRRdwZTp0NuQ6dD5x27El3c6tJ5GWD0IQ0cIBUWR6dD3
      ItOh8489GOnQFjddnS0Iq4MsnzWJpGzJaz+Ax+srtA6JpCTIWSBJRSMNIKlopAEkFY00gKSi
      2TIInp6eYnl+mrhqcvF7V/DY5TSP5OFmSw/g9wcQGKiGBXte80MSycFiiwHsNitrcZU6Jc5q
      SiY6SB5+thhg4NubJBJJVpIKPvn6I6kAtrzoqKagvr6OM2cewZndarREcqDZ0gN47BZCoRjX
      r39MXC2VJIlk/9jSA9jdNTz3wmPcmehH320IYGQYGR0nrSucPtm5DxIlkuIhzHtyT9eWZnn7
      nau0n3qEJy+dR9kl2800VEYn5jl+tBVd17POwIT1zMNsMyWLFVvMtjduZ7b3pBzuR7loLmbb
      O8XabDaxpQeYm5nG6fGwMj9FXD1PlWPnxuampmluPYaiKJiyOvQWZDp0/rGlSIfe8i0lkkma
      mluwGhm0+8yC+hubcdvkIrLk4LPlKfZVVZFMJsDmwWXb/SKXy1VsXRLJvrDFAIZpAgJMkxx2
      F0okB5YtBojHYlisFnQ1Tir7bZwSyYFly6jg0lPPoWkZ0qEFktnt6ZZIDjRbDPD2b/83a5oV
      NTjLs6/9TwJumQ4hebjZYoCXX/kXTJsTocbRrPLhlzz8bBkDWB0uJkaHsTq9OKUBJBXAtsn8
      3q9u8J9vv000LaeBJA8/25bG3BaVQy0dZOTzL6kAtvUAVrud29/2YZPp0JIKYEsPMNr/NQlH
      Cz9/5TnsihwDSB5+tvQAswt3aLBH+eTWIOn7JAMtLcwyu7BcdHESSbHZ0gN0d50kGInjxbhP
      6XOVkeFJmo8dxzRNTNPMuhIyrGce6rpelNiNbMJS6sin0nKx7kcumnOtrF0MHRvx+6ljiwGa
      Wtqxr64yMTqCddcxgMBXF0BNRDBpRAix+ScbNtKnixVbah25pkMX+35kG1suOoQQ+6pj2yzQ
      J1ffQNgbOZwwOezZ6WGy0dxYTUY4EUJgQk4GgOw3XuQSm6sRi6mjWG0XKzbXDTHFjt1PHdsM
      UFMTIHD0AjXO3Ruuq2/K+kMlknJmW5+gpSOMjA6RlJviJRXAth7AsNfiVMAh1wEkFcC2HiAR
      T6DINQBJhbDNAEKx4PV6kR6QVAJbXoEikQhd3SdIZkxpAElFsKUHiEYjjAwPkU6nMWQynKQC
      2GKA5uYjRENBFpeX0eWWSEkFsG0W6MITzxBwCFTjboUIieQhZtsgeHV+kk/7pvE65MMvefjZ
      ZoDg3DCNjY2E5AEZkgpgmwH8DUcYmZjGd58eYGZyjOm5O0UVJpHsB1vGAKlEDKWqgYt+hWja
      xLVLWZSFhXnau85uSf3NNp02l/TpXGPLRQdkn9ZbTB253rtS6yhm27vFbjFAMh4lHkvgbDiC
      37VbD2Bw4eITDA8NEqirzimP/F4xhY7NNae9mDpypRg68tFSDjpy/R73GrvFALX1TcQWfsvE
      3AptXSepc+7c0MLMJLWHGlGEwLybv51L6m225a9ziQXKQkc++wGKocM0TQwTPro9hcdl43un
      jux6bzY0F0tHLrH7rWPLt6RrGicf+R5VDst9VoIV2o530NwQyOqDH2ZG54K8dWOIUCxVaik7
      8uHtSY421WCY0Dcht7DuxBYDjPTf5rNb/dQF6pB1se5PPKny5eA8T51t5b8+HS61nB1x2m0E
      o0ki8TROefDzjmw9J9jhxGqx4HG7ZS7QA1AUgabrhGIprJbyPCzkyTMtWBSFY4drOd5cV2o5
      ZcmWM8IioSCJ1PpOGH99AzbLg11QLkcTlULH4lqc4ZkVLp1o3vwNK49Iyj92Y6Zmv3QIIbae
      EearqeOb994hGM/Q1NbFpfMnyWHLZcXRUOuhodZTahmSPbDNPipW2gNO5qORUuiRHBCmFsNc
      +2aK5kAVzz7SntPm9HJiez+txtGrj/D0o2dkLpxkVz7+ZorXXjhLMq0RjCRLLSdvthmg4/gx
      rr79O9KKWz7/kl2pr/Fw9csxlkJxqty7nKd7ANj2ChRT4Sc//hH28pzYkBQY3TD4pGcGt8PK
      xe7DWb/KvHjpGEtrcZ59xIX9AFdS3vKYf/jum4xOzjI2t4LHXipJkv3k2jdT1PlcRBMq/ZPZ
      L5YJIWio8x7ohx++Y4BHLz1BtcdBKrpGTNYFqgiEEBiGgWEaB3Yguxe2rANkjaGxGorjr6uu
      6HWAnTho6wCGYfJp3wxup40LHU1ZTXs/tOsA2TI1MUE4beKvq87nckkZoSiCJ04fuVuYttRq
      9p+cDWBkEswvr5FIqRgnOjZXEbO+3jDQtOxO4c41thx05LofoJj3I1fNuZR0L4aOjfj91JHf
      KxCwsrJKIOAvm1ePctFx0F6BYHsqxNcjC/RPrvD4qWY6dsghephegfKe7AwE/PleKiljUqrG
      b97vQ9N1Xv/Lt6WWU3TkbL9kC4ZhYlEEx5vr0CqgOJQ0QBlimjA0s8Jn/bPoOeynLQQuh5VH
      upq4dnuKZx9p39fPLgVyl0QZMrUYYmQ2SFtDNR98PcnzF4/t22cLIfjp0yfRdKNs9zkUkof/
      JzyAaLqBy27F67KT0bI/YK5QCCGwWS0VsTAmDVCGHD9cS02Vi7G5tX397b8fpNT17NFQLMW1
      b6aIlfgoIvkKVIYIIbjY9fCdwxZPqfy/D/qprXIyMhvkX549xe+vDfDvL50vmSbZA5SIlKrx
      H+/18PrVHuZXoqWWsy8sBuN0HKnjpcsdpDM6NV5XXnWUCok0QInon1zm3PEG/unKCT7rny1o
      29+OLfKr93p5+9PhrB6wWFIlqWa/Wpsv7Y01rEWTvPFhPy9f7uDDryd5+fGOon/u/ZCvQCWi
      40gdf/x4kK9HFrh88khB2/52bJHXnj/Du1+OsxZNUedz7Ro7NL3C7dE7pFWNlx/v5FCOe5xN
      06RvYhm7zULnEf9984kURfAP3+/e/PvF7tK/5kkDlAif28G/PneGTEbD7SrsjqrWhmp+f20Q
      A6j23r/t4ZlVXrx0nKW1GL9+r4e2xhpeeOwYXld2G0K+GJgjoxvEkiqGaXKi9WAVTJMGKCE2
      qwVB4d+Br5xrJZZI43Y5sDygwNOV8228fWOYxbUYj3Y2ca6jgatfjvHq0yez+qx4KkProWrC
      9hSJVKYQ8veVPMYAJhOjg9zuGSjCVyd5EItrcX73UT8944u7xgghcDmsD3z4AWq8Tn72/Bl+
      /sJZFtfiDE2vUlO1+yvTd7lyrpWJhTXiqQwXOhqzvq5cyCsbdHlhmumlKI+cPYmu6zktmBiG
      kXWmZLFii9n2xu3M9p7kquM3HwzwylNd/OnzMV66tPurSj6al0IJQtEUXS33f5c/iN/LTrE2
      my2fDTE64XACiyIQQkFRzLJIQ37Y06F1wyCWUHE5bEzeiZDO6Lgc9l2vzScdurm+mub6B29y
      KmY6tBBiXyvU5WEACx0nTuR+mSRvdMPgjQ/7sVstuBxWDNPkJ09245AFb/eMXAcoAOmMxtcj
      dwjH00VpP5nWsNss/MP3O1mLprjQ0UiNd5fDGyQ5IQ1QAN68PoTVInjz+mBRktc8Ths+t4Nf
      v9fL2WOHdo0bnl3lD9cGWAzGCq7hYUUaoACkMzrHD9dht1mKsolECMFzF4/xs+fPcH6XmZaU
      qvHV4DwvPHacv3w1VnANDyvSAAXg+YtHeefzEc4da8DlsJVEg0URaLrB3EoEWw7HSlU6eW+K
      36BcZl/KRUcpN8WvRVOMzK5y7ngDVoWSnQ9gmCbJdAa3w4au62W9KV5OI5QBH349ycxyhItd
      TZxqr8+7ndoqJ5dPNgPkVIqkkJimyZvXhzBNE7fDxvMX20uiI1vkK1CJiSVV1mIpfv7CWW4O
      L5Razp7JaAZqRufVKydYCSdKLeeBSAOUGJfDRiKV4Z3PRglUu0stZ8/YrAr1NW5ev9qzY02h
      ckOOAQocm88YAKEQjq2nLd9P/4N0JFIZppfCHD9ci8CUZ4Q9IHZPhbEk+aFqOu99Nc5Xg/Ob
      OThWi4K/2r2nTeiabvDGR/1E4mn+eH2oUHJLyvRimP/zl29594uxou0ckwbYZ96/OcHx5lqi
      yTQjs8GCtZvRdJx2Kxc6G0mlD15a8k5c+2aK154/C8DSWjyra9Y36CzxzmcjJNMPngjIywDj
      I4P0DgzLdOg8sNssROJpEqkMdmvh5utdDhvdLX5+/9EAT19oL1i72aDpBnoRFgCbA1X8+YtR
      5lej1GaZor0aSTI0s8pj3Yd5+8aDe8K8pkED/joWw2lMwyibqszlouNB1aGfOnuEm0MLHG2q
      5ki9d0vbkUSaG72znGwL0NawPSvzuzrmV6I4HVbq7j4cp9sDnG4P5K35u/dPN0xu9M7gcth4
      7J7ti/e2Pb8a4/1bk4DJj5/oouY7O9D2Uh36yrkWVsIJfB4Hy6EYihDU17i3xG5r2zRIpTOE
      Y8n1xcG7/7+A1aE1Pnr/Gq0d3bS3NmOUyeDzIA+CN9r+1dVveflyB3/+YoxXnz6B+zuryvfG
      3hyaZ3EtTjie4pnz7RwOVO1J806D4A++nqCxzkswkqTK7eDc8YZtbb/1yRBPn28jHE8zsRDi
      mQttm9ebpoma0bDbrFl9L7sNggemlhmaXkXTDR7pbNw89X6nn9E0YXoxxPRSmCdOt2xWtyvg
      QpiVZ374w9wvkzwQIQRJVcMwTZQHnNE5vxrl+6dbmFuJsrgW43CginRGY34lSusOvUc+WC0W
      kmmNdEandpcyiY+fOsIfPh5ECME/Pb01Tf7m0AKD08tYLRb+27OnUbLYobYTM0sRLp9sJp3R
      mF6MbBpgJ4SAtsYa2hprsmpbToMWOHYvPUAileGz/llOtdXT6PfeNzaeUnnn0xGcDiuGYRJL
      ZkimM3S3+llaS/DKk5177gEM0+SrwXlcDitnjjZs7hLL9n68/pdv+e8/PMUHt6c4d6yBhrrt
      P9O97NYDqBmdt24MY1EEP/5+131/q+/Gbj2ANECBY/c7F6hvYomUqtHRXMdvP+znf/zdBX59
      tYd/fe50ydcBvhm9w+2RBdwuBz995iTKDt/N/EqU929NcPjuifMyF0iSE03+Kt66McTcShSH
      zcL//WsvT55tLbUsAM53NHK6PXDfh/T9WxP87PmzvPvlGMuhBH7f/m70kQY44NT5XPzzM6dI
      pDPU1/ytqNWDZl5KXZJwg0O1Hv56c5z5lSg/LMF5BNIADwEelx1PloWsNrg5tMDA1DIup41X
      r5Ruj/cLjx3jTjDG0+fbsNssWR8uWCjkSnCFMji9ws9fPIfHaScYSZZMhxCCJn9VyTb4yx6g
      Qulq8fOrqz047FbqfC5Mw+TdL0YJRlP86PGObZvuE6kM8ZS65TXrQdwevcM3I3dwO2389Aen
      dhwElxppgArl0onDPNZ9GCHWxwMjc0F8bgdPnW3lT5+P8s8/OLUZG46n+MO1QQLVbvzVLi7t
      UNTWME3+enOClXCCH13uoKbKSe/4Eq+9cIYPbk+xvBZ/4DRoKZCvQBWKEAJFEZvTxoFqNyNz
      Qa73zND0nTWIpbU43a0Bnn/sGDNLkR3bm1wI4bBZeOXJ7s1N+SfaAvzHX/tYDSdz6jn2E7kO
      UODY/V4HMAyT926OE4qtv7pUuR15aTZNk3hKI5pIczhQteU+GobJnz4fIRRL8fLlDqo92yvS
      hWIp3rw+RHOgCpvNwjPn2wqWCrEbch1AwtDMCtUeB5dPNvO/fvcFrYd8dLb4eawr90K1Po8D
      n2d7OXUhBCdaAyyuxanxOjHN7TM11R4nr145QTie4ki9b/M6yz29TDmS1yvQ8vwkoURpNl1L
      thKodjM6F+Sz/lnaGqv5+YvnGC3gPgOAO8Eo34wtUlfl4t0vd645JMS6gVoOVZf1A/9d8uoB
      rHqStUSGapdls9vKFsMw0PXsqqflGrtRXLWUOnZLLS6WjroqJy9dOkY0oRJLpPnN+700+T05
      a76fXjWj4bRZ8LhsqBmtaPduIz6X2L3qyMsAHq+H8N221gdT2XckpmnmVLY7l7aFyL67LZaO
      XMcAhdDhr/bgr/bQ1lhDRjewWy2bY6Js291o2zTh6ldjLK7F6TxSx/dOHaGloYa1WJr+yWV+
      9HgnilK8ny+X56kQ9y4PAxjMLifQrEvg/1vudy7dXjFjS61jI64UOoQQOO75knP5ZbARn1Iz
      RBMq//biOX51tYcnTrcgYMvhF5qmPTTfYR4GUDjWJcujl5o7wRh/+XIMq0Xh1SsnClaS0WG3
      oiiCX7/XQ0NdeU5dFhK5DnBA+axvllevnOBiVxM940uFa9hcL/br8zhJZbGpPFtiSbUszxCT
      BigDdN0gGEnmlKF59tgh/vOTYT7vn6O7xV8wLaqmY1UEP36ik1CBzjsYmw/y1o1hfn9tgIXV
      8joUXK4DlBjDMHnjWh8+twObVeGly9kdHH28uY4j9T4URWArYHUJh81CU6CK16/2cP7uHuC9
      Mji1youPHSOWVBmZDdLkr3rwRfuENECJid+tovz3T3Ty+tWenK4tRgalEIKnzrby1N1NNfGk
      iqKIPY0xrpxr3dzS+I8lTL3eCWmAElPlsuPzOHj9ag+PdpbXMaOjc0G+HJxH03Refrzjvvk8
      mm7wx+uDJFMZnrnQvmVjvs/j4LUXzu6H5JyRBigDfvjo0VJL2JGBqRVevtxBMJpgeCZ4XwNM
      LKxxpN7Ho51N/OHjgYJVpig20gAHhMGpFXonFnnqXBuN+5RW/NTZFv7r02GsFuWBry7N9T5u
      9M4ysxSmqyWwL/oKQV7ZoMlEDGF14LTbyiYLs1x0FCMbNJnO8Ob1If7u8eO8eWOEf3vxXEHa
      3aBQVSEymo6a0bdsz3wIq0NrjI1OMjY6LmuD7hMWRUHVdKYWwwWtJ1pobFZLznuTS00eBlBx
      efy4HPLtab+w2yz85MluUqrGPz7VXWo5DxV5GMAFeghhy65ar6Qw1HidPNLZKE+HLzB53E3B
      8a6TwN+yCHMdRuQSn21sOekoVtvFjC0HHfk8T3uNLdivk1LfvFxjD2rbD7tp91vHngwghNgc
      seeSlppLjn+2sfmkIRdDx72pxaXUkUtsuWjemInaTx173hQvkRxUhBDC8otf/OIXxfqAseEB
      Zu+sUl/vJ7yywMjYOEKxMjo6SipjMDc1SkI1qa6uIh0J0j88ioYVn9fFUH8vS6tRLKbK6MwC
      TpFhZHQMYa/C41To6+klFEvir6thdmqMiak53G4nt3uHONJYw82vvkWxO/B6XEyMDjEzv4Q/
      ECC2tsTQyBimsDM/O8VKKMra0hx3lsPUB/yoiTD9g8OohkJ1lZuRwT4WlkMopsrY6DgZLcPE
      5CxOTxVOm8JAXx+r4TgBfy3zMxOMT83isNuYmpogFk8xMz1FNJmhrsbH1PgI07ML1AXqSUVX
      GRweRcfC4vwMi6thgndmCcdVamur0VIx+voGSekm1R47fX19RBIqHjt89c0gVjPF+OQ0nmo/
      ip6kt2+QpGZS4/MwNjzI3MIq9YEavvj4U3x+D319ozjcXlwOK0MDfSwFI9QH6licm2J8chqL
      RTA4OIbd6WBidIhQLI2/robwyh2Gx8ZRHB7cdoX+3h5CsTTBxTmCkQTpaJCZxWW8VdUopkpv
      bx9xVae2uoqJ0SGm55awKzqTM3M4bIKBoVEypoVqr4uRwX4WVkIcqvezsjDD2MQkVruT8bEx
      LHYnowN9pA2Fap+XWHCJwdFxTKsTj8vOYN+3rIaTpOMhensHsNgEkxMT2Ny1Wc9Q/vKXv/xl
      cdOhrQ6qvQ503SQUTXLq7GnmhgY40nUSQ03gdDqIRiKYJqyEInSfOE0qHgY0bA4fXrvA52/E
      boFwOM7Js6eJBZchFcYZaMUi1hedVA2ON9WREnZqfG5M3cTpcRKJrKfeGoqN+loPaVUnHIpx
      4swZEtEINT4PbrcDi62KaqeCakI4HOJo5ynUZBTQsdi81DotuKtrsdntuJwOrFaTWDQBahx7
      TSO2u1PzKdWgq6WRlC4wM2lS8TiBI+0o+npasYaF5kPVxJIZwsEwnWfOkIpFcTutZDQDh9NJ
      LBpGNyEeWaP52Am0dIJ0PEZdYwuKkWZ8chaX3UospdN9rIVwOEIiskbT0W50NQGYCIuTQ14b
      w2Pj2J1uMjrY7Rai0RjoaazeOhy29a8+ntI40dFOOBTG7rAQXFnG5z+MlfW9ACuRBGdPdRMJ
      hdDSSXx1TVjRcLgcJKIRhMOJmUkRT6pkYkHqWroxtTRgYgo7zT4HQzPzCENjemyaY6fPkklE
      wNRRXFWbD2skoXLqZBeTvbdICxtra2s4XQ4ikfU6RIuhGGfPnCIeWcM0VFzeAHbF4HBLG/WH
      DpFKpDlz5iThldz2RhTVAFoqTjAUJ5mM43Ha6O/ppb79GFNDA+iKDSEsm1WMa6rcDA70YXF4
      iEZTJONBQokMwaU55ufmEFYL/T29OH114PARW5wgnTGIRqMoaIzMLWNR48zPzbG4GsF67/lQ
      apI7K2H0TBKX28Fgby8Wi8nA2CxCWEkn1liNpbEJqPJWMTbcj2JzEY0mSSfDrMTSjPX3oLO+
      Z1bhbvVlm5v4yhzJtEY0GsWqGAxNzqHoGYTNibAIFqfHUc27DsmkmVkIophpnB4XQz09WOwO
      YskMppFBEQq6pmGa4PL4mBkbwEAhYwqW5yZRdUFNbTWJRByL0BkcncLr9eL0+JgbG8RU7ESj
      cTLpGAuhJIHaGgwtRTKVwaKApulgsZMKLRNPqkSjURxWGBwZx+2txqIIUKysLc2SursXptZt
      p6dvCJfbTSpjsLY8S0ozUVjXKoTANNc3nFs91SxPDqJjIRqNo2cSzATjtNTXoBkm3poqRnt7
      EHY3CIV0dI1oPEU0Gl3vXQaGOHz8BKgpDNNAERY0bX0Tjd/rpKe3H4fLSzyhEg0tklANQktz
      1DUeweOw0Nvbj6cmt70RcgwgqVjkQdmSikcaQFLRSANIKhppgD0wPzHIR9c/ZXykj1v9E+iG
      gaZl0HUDQ9fRdR0tk8E0TZYn+hieD3Hjk0/W/13TME2TzN1Ka5lMBk3T7h7onEE3DD755MZ6
      RbO7fwxjvV1N1zENg76bN1iNa3zz5ad8/uVNEmmNzN3P++5/N3RomoauG5v/vfHJJ6W+jSVF
      ZlbtAYtFIR6LYQZcjA73MzM5hscIMx1WcKjLtLS1catngFMXn+F0bYY4GqFQiLf+8DuEaeD1
      VdMzMEDT4SN43XZM4UIoEI7GcXs82ND565/fJmFYsQqB025haX6S5ZiVEx0NhFdWqOu8hCJM
      4okUvZ+9z43bfTz5zAvcvnGVo90XmJxd5nvnWpkLJkFPsRZO4XC68NtV+heStNaXX83+/UT2
      AHvAYnNS61YYHJumqfUoNj3KUkSnxmOntqGF0x1ttB4/zenOVnz1h5juv4VhceJwezl8qA5D
      WLhw+Uka/T6OHm+n+XALwjRQ00lsNvtmDX8UK20BOxlnAG9VLU9feQJTX5+CFICnqho1eIel
      aIZzF5+A6B0a27sRVicBV4qphRC6pqEoCocOt+IQKvPBBH6f+0AVsi0Gchq0zFBjQXonV3j0
      TNeWf++79TkNnecJVO3vMaIPM0II8f8BUK3kOZf1cG8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
